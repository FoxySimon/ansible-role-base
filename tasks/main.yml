- name: Create base user
  become: true
  tags: base,base-user
  ansible.builtin.user:
    name: "{{ base_user }}"
    create_home: "{{ base_user_create_home }}"
    state: "{{ base_user_state }}"

- name: Add user to admin groups
  when: base_user_state == "present"
  block:
    - name: Determine available groups
      tags: base,base-groups
      ansible.builtin.getent:
        database: group
      register: available_groups

    - name: Add user to admin groups if they exist
      tags: base,base-groups
      ansible.builtin.user:
        name: "{{ base_user }}"
        groups: "{{ item }}"
        append: true
      loop: "{{ base_groups + base_groups_extra }}"
      when: item in ansible_facts.getent_group

- name: Configure sudo NOPASSWD access for package management
  tags: base,base-sudo
  community.general.sudoers:
    name: "{{ base_user }}_nopasswd"
    commands: "{{ base_sudo_nopasswd_commands + base_sudo_nopasswd_commands_extra }}"
    user: "{{ base_user }}"
    runas: ALL
    nopassword: true
    state: present

- name: Check for existing SSH keys
  tags: base,base-ssh
  become_user: "{{ base_user }}"
  ansible.builtin.stat:
    path: "~/.ssh/id_ed25519"
  register: ssh_key_file
  changed_when: false
  check_mode: false

- name: Setup SSH key for user
  tags: base,base-ssh
  when: not ssh_key_file.stat.exists
  block:
    - name: Ensure .ssh directory exists
      become: true
      become_user: "{{ base_user }}"
      ansible.builtin.file:
        path: "~/.ssh"
        state: directory
        mode: '0700'

    - name: Generate ED25519 SSH key
      become: true
      become_user: "{{ base_user }}"
      ansible.builtin.command: >
        ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N "" -C "{{ base_user }}@{{ ansible_hostname }} (Ansible generated)"
      args:
        creates: "~/.ssh/id_ed25519"
